{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/routes/index.tsx", "../app/services/elasticsearch.server.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        onShellReady: () => {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError: (err) => {\n          reject(err);\n        },\n        onError: (error) => {\n          didError = true;\n\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport styles from \"./styles/app.css\"\n\nexport function links() {\n  return [{ rel: \"stylesheet\", href: styles }]\n}\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"ADA Handle Starter Kit\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { LoaderFunction } from \"@remix-run/node\";\nimport { useState, useEffect, Dispatch, SetStateAction } from \"react\";\nimport { searchHandle } from \"~/services/elasticsearch.server\";\n\nexport const loader: LoaderFunction = async ({ request, params }) => { \n    await searchHandle('test');\n    return null;\n}\n\nconst SearchInput = (props: {val: string, onChange: Dispatch<SetStateAction<string>>}) => {\n  const onChange = (e: any,) => {\n      props.onChange(e.target.value);\n  }\n  return (\n      <div className=\"mb-6\">\n          <label htmlFor=\"base-input\" className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Search</label>\n          <input type=\"text\" id=\"base-input\" value={props.val} onChange={onChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" />\n      </div>\n  )\n}\n\nexport default function Index() {\n  const [searchValue, setSearchValue] = useState('');\n\n    useEffect(() => {\n        if (!searchValue) {\n          console.log()\n            // setItems(props.data);\n        } else {\n            if (searchValue.length > 2) {\n                const lcValue = searchValue.toLowerCase();\n                \n                // searchHandle(lcValue);\n                // const result = props.data.filter(item => item.name.toLowerCase().includes(lcValue) || item.description.toLowerCase().includes(lcValue) || item.ticker.toLowerCase().includes(lcValue))\n                // setItems(result);\n            }\n        }\n    }, [searchValue, []])\n    \n    return (\n      <div className=\"w-screen h-screen bg-gray-800\">\n        <div className=\"container max-w-6xl p-16  h-full w-full\">\n            <header className=\"mb-3 py-6 w-full flex flex-col justify-between\">\n                <div className='flex'>\n                    <img src=\"/logo.svg\" className=\"mr-4 h-6\" alt=\"TxPipe Logo\" />\n                    <h2 className=\"text-m text-gray-400 font-normal\">Starter Kit provided by TxPipe</h2>\n                </div>\n                \n                <h3 className=\"text-3xl text-gray-200 font-extrabold mt-4\">Ada Handle to Address</h3>\n                <div className=\"mt-8 rounded-lg border border-blue-500 bg-blue-600 bg-opacity-10 p-4 text-white mb-4\">\n                    <h1 className=\"font-bold\">Look for the Address associated to an ADA handle</h1>\n                    <h3 className=\"text-sm text-blue-500 mt-2\">This starter kit implements the functionality provided by the Scrolls library for searching the address associated to an ADA handle. Start typing the name of the handle for doing a real-time search in the blockchain.</h3>\n                </div>\n            </header>\n            <SearchInput val={searchValue} onChange={setSearchValue}/>\n            <div className=\"text-white text-xs text-right mb-2\">\n              {/* {items?.length || 0} {items?.length === 1 ? 'item' : 'items'} */}\n            </div>\n            <div className=\"grid grid-cols-6 gap-6\">\n                <div className=\"col-span-6\">\n                    <div className=\"grid gap-6 grid-cols-1 md:grid-cols-2 lg:grid-cols-3 auto-rows-max\">\n                        {/* {items?.map((item, key) => <PoolCard key={key} data={item} />)} */}\n                    </div>\n                </div>\n            </div>\n        </div>\n        </div>\n    )\n}\n", "import { Client } from '@elastic/elasticsearch'\nimport { SearchResponse } from '@elastic/elasticsearch/lib/api/types';\n\nconst client = new Client({\n  node: 'https://elastic-es-http.ftr-adahandle-v0.svc.cluster.local:9200',\n  auth: { username: '', password: '' },\n});\n\nexport async function searchHandle(name: string): Promise<SearchResponse> {\n    const result = await client.search({\n        index: 'adahandles.mainnet',\n        size: 20,\n\n        // query: {\n        //   match: {\n        //     quote: name\n        //   }\n        // }\n      });\n    return result;\n} \n\nexport async function queryClient() {\n}", "export default {'version':'1538bda5','entry':{'module':'/build/entry.client-7OWBMBRN.js','imports':['/build/_shared/chunk-EM4O3TO7.js','/build/_shared/chunk-IE366Y5W.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-Z3ELFJJ7.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-2OOIOUIP.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-1538BDA5.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": ";;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA,oBAA4B,mBAE5B,cAAyB,4BACzB,eAA4B,6BAC5B,gBAAuC,6BAJvC,2DAMM,cAAc;AAEL,SAAR,cACL,SACA,oBACA,iBACA,cACA;AACA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,QAAI,WAAW,IAET,EAAE,MAAM,MAAM,QAAI;AAAA,MACtB,mDAAC;AAAA,QAAY,SAAS;AAAA,QAAc,KAAK,QAAQ;AAAA,SAAjD;AAAA;AAAA;AAAA;AAAA,aAAsD;AAAA,MACtD;AAAA,QACE,cAAc,MAAM;AAClB,cAAM,OAAO,IAAI,0BAAY;AAE7B,0BAAgB,IAAI,gBAAgB,WAAW,GAE/C;AAAA,YACE,IAAI,qBAAS,MAAM;AAAA,cACjB,SAAS;AAAA,cACT,QAAQ,WAAW,MAAM;AAAA,YAC3B,CAAC;AAAA,UACH,GAEA,KAAK,IAAI;AAAA,QACX;AAAA,QACA,cAAc,CAAC,QAAQ;AACrB,iBAAO,GAAG;AAAA,QACZ;AAAA,QACA,SAAS,CAAC,UAAU;AAClB,qBAAW,IAEX,QAAQ,MAAM,KAAK;AAAA,QACrB;AAAA,MACF;AAAA,IACF;AAEA,eAAW,OAAO,WAAW;AAAA,EAC/B,CAAC;AACH;;;AC/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,IAAAA,gBAOO;;;;;;AARP;AAWO,SAAS,QAAQ;AACtB,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM,YAAO,CAAC;AAC7C;AAEO,IAAM,OAAqB,OAAO;AAAA,EACvC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AACZ;AAEe,SAAR,MAAuB;AAC5B,SACE,mDAAC;AAAA,IAAK,MAAK;AAAA,IACT;AAAA,yDAAC;AAAA,QACC;AAAA,6DAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,iBAAM;AAAA,UACN,mDAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,iBAAO;AAAA;AAAA,SAFT;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC;AAAA,QACC;AAAA,6DAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,iBAAQ;AAAA,UACR,mDAAC,qCAAD;AAAA;AAAA;AAAA;AAAA,iBAAmB;AAAA,UACnB,mDAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,iBAAS;AAAA,UACT,mDAAC,8BAAD;AAAA;AAAA;AAAA;AAAA,iBAAY;AAAA;AAAA,SAJd;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA;AAAA,KAVF;AAAA;AAAA;AAAA;AAAA,SAWA;AAEJ;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AACA,IAAAC,gBAA8D;;;ACD9D,2BAAuB,mCAGjB,SAAS,IAAI,4BAAO;AAAA,EACxB,MAAM;AAAA,EACN,MAAM,EAAE,UAAU,IAAI,UAAU,GAAG;AACrC,CAAC;AAED,eAAsB,aAAa,MAAuC;AAWtE,SAVe,MAAM,OAAO,OAAO;AAAA,IAC/B,OAAO;AAAA,IACP,MAAM;AAAA,EAOR,CAAC;AAEP;;;ADpBA,+DAIa,SAAyB,OAAO,EAAE,SAAS,OAAO,OAC3D,MAAM,aAAa,MAAM,GAClB,OAGL,cAAc,CAAC,UAAqE;AACxF,MAAM,WAAW,CAAC,MAAY;AAC1B,UAAM,SAAS,EAAE,OAAO,KAAK;AAAA,EACjC;AACA,SACI,mDAAC;AAAA,IAAI,WAAU;AAAA,IACX;AAAA,yDAAC;AAAA,QAAM,SAAQ;AAAA,QAAa,WAAU;AAAA,QAAkE;AAAA,SAAxG;AAAA;AAAA;AAAA;AAAA,aAA8G;AAAA,MAC9G,mDAAC;AAAA,QAAM,MAAK;AAAA,QAAO,IAAG;AAAA,QAAa,OAAO,MAAM;AAAA,QAAK;AAAA,QAAoB,WAAU;AAAA,SAAnF;AAAA;AAAA;AAAA;AAAA,aAAyV;AAAA;AAAA,KAF7V;AAAA;AAAA;AAAA;AAAA,SAGA;AAEN;AAEe,SAAR,QAAyB;AAC9B,MAAM,CAAC,aAAa,cAAc,QAAI,wBAAS,EAAE;AAE/C,sCAAU,MAAM;AACZ,QAAI,CAAC;AACH,cAAQ,IAAI;AAAA,aAGN,YAAY,SAAS,GAAG;AACxB,UAAM,UAAU,YAAY,YAAY;AAAA,IAK5C;AAAA,EAER,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,GAGlB,mDAAC;AAAA,IAAI,WAAU;AAAA,IACb,6DAAC;AAAA,MAAI,WAAU;AAAA,MACX;AAAA,2DAAC;AAAA,UAAO,WAAU;AAAA,UACd;AAAA,+DAAC;AAAA,cAAI,WAAU;AAAA,cACX;AAAA,mEAAC;AAAA,kBAAI,KAAI;AAAA,kBAAY,WAAU;AAAA,kBAAW,KAAI;AAAA,mBAA9C;AAAA;AAAA;AAAA;AAAA,uBAA4D;AAAA,gBAC5D,mDAAC;AAAA,kBAAG,WAAU;AAAA,kBAAmC;AAAA,mBAAjD;AAAA;AAAA;AAAA;AAAA,uBAA+E;AAAA;AAAA,eAFnF;AAAA;AAAA;AAAA;AAAA,mBAGA;AAAA,YAEA,mDAAC;AAAA,cAAG,WAAU;AAAA,cAA6C;AAAA,eAA3D;AAAA;AAAA;AAAA;AAAA,mBAAgF;AAAA,YAChF,mDAAC;AAAA,cAAI,WAAU;AAAA,cACX;AAAA,mEAAC;AAAA,kBAAG,WAAU;AAAA,kBAAY;AAAA,mBAA1B;AAAA;AAAA;AAAA;AAAA,uBAA0E;AAAA,gBAC1E,mDAAC;AAAA,kBAAG,WAAU;AAAA,kBAA6B;AAAA,mBAA3C;AAAA;AAAA;AAAA;AAAA,uBAAmQ;AAAA;AAAA,eAFvQ;AAAA;AAAA;AAAA;AAAA,mBAGA;AAAA;AAAA,WAVJ;AAAA;AAAA;AAAA;AAAA,eAWA;AAAA,QACA,mDAAC;AAAA,UAAY,KAAK;AAAA,UAAa,UAAU;AAAA,WAAzC;AAAA;AAAA;AAAA;AAAA,eAAwD;AAAA,QACxD,mDAAC;AAAA,UAAI,WAAU;AAAA,WAAf;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC;AAAA,UAAI,WAAU;AAAA,UACX,6DAAC;AAAA,YAAI,WAAU;AAAA,YACX,6DAAC;AAAA,cAAI,WAAU;AAAA,eAAf;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,aAHJ;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,WALJ;AAAA;AAAA;AAAA;AAAA,eAMA;AAAA;AAAA,OAvBJ;AAAA;AAAA;AAAA;AAAA,WAwBA;AAAA,KAzBF;AAAA;AAAA;AAAA;AAAA,SA0BE;AAER;;;AEpEA,IAAO,0BAAQ,EAAC,SAAU,YAAW,OAAQ,EAAC,QAAS,mCAAkC,SAAU,CAAC,oCAAmC,kCAAkC,EAAC,GAAE,QAAS,EAAC,MAAO,EAAC,IAAK,QAAO,UAAW,QAAU,MAAO,IAAG,OAAQ,QAAU,eAAgB,QAAU,QAAS,2BAA0B,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,gBAAe,EAAC,IAAK,gBAAe,UAAW,QAAO,MAAO,QAAU,OAAQ,IAAK,eAAgB,QAAU,QAAS,mCAAkC,SAAU,QAAU,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,EAAC,GAAE,KAAM,8BAA6B;;;ACKjsB,IAAM,uBAAuB,gBACvB,aAAa,WACb,QAAQ,EAAE,QAAQ,qBAAY,GAC9B,SAAS;AAAA,EACpB,MAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AACF;",
  "names": ["import_react", "import_react"]
}
