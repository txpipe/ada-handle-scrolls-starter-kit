{
  "version": 3,
  "sources": ["../../../app/routes/index.tsx"],
  "sourcesContent": ["import { useState, useEffect, Dispatch, SetStateAction } from \"react\";\n\nconst SearchInput = (props: {val: string, onChange: Dispatch<SetStateAction<string>>}) => {\n  const onChange = (e: any,) => {\n      console.log({e})\n      props.onChange(e.target.value);\n  }\n  return (\n      <div className=\"mb-6\">\n          <label htmlFor=\"base-input\" className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Search</label>\n          <input type=\"text\" id=\"base-input\" value={props.val} onChange={onChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" />\n      </div>\n  )\n}\n\n\nexport default function Index() {\n  const [searchValue, setSearchValue] = useState('');\n\n    useEffect(() => {\n        if (!searchValue) {\n          console.log()\n            // setItems(props.data);\n        } else {\n            if (searchValue.length > 2) {\n                const lcValue = searchValue.toLowerCase();\n                // const result = props.data.filter(item => item.name.toLowerCase().includes(lcValue) || item.description.toLowerCase().includes(lcValue) || item.ticker.toLowerCase().includes(lcValue))\n                // setItems(result);\n            }\n        }\n    }, [searchValue, []])\n    \n    return (\n        <div className=\"container max-w-6xl p-8 bg-gray-800 h-full\">\n            <header className=\"mb-3 py-6 w-full flex flex-col justify-between\">\n                <h2 className=\"text-2xl text-gray-400 font-normal\">TxPipe Starter Kit</h2>\n                <h3 className=\"text-3xl text-gray-200 font-extrabold\">Ada Handle to Address</h3>\n            </header>\n            <SearchInput val={searchValue} onChange={setSearchValue}/>\n            <div className=\"text-white text-xs text-right mb-2\">\n              {/* {items?.length || 0} {items?.length === 1 ? 'item' : 'items'} */}\n            </div>\n            <div className=\"grid grid-cols-6 gap-6\">\n                <div className=\"col-span-6\">\n                    <div className=\"grid gap-6 grid-cols-1 md:grid-cols-2 lg:grid-cols-3 auto-rows-max\">\n                        {/* {items?.map((item, key) => <PoolCard key={key} data={item} />)} */}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n"],
  "mappings": ";;;;;;;AAAA,mBAA8D;AAA9D;AAEA,IAAM,cAAc,CAAC,UAAqE;AACxF,QAAM,WAAW,CAAC,MAAY;AAC1B,YAAQ,IAAI,EAAC,EAAC,CAAC;AACf,UAAM,SAAS,EAAE,OAAO,KAAK;AAAA,EACjC;AACA,SACI,mDAAC;AAAA,IAAI,WAAU;AAAA,IACX;AAAA,yDAAC;AAAA,QAAM,SAAQ;AAAA,QAAa,WAAU;AAAA,QAAkE;AAAA,SAAxG;AAAA;AAAA;AAAA;AAAA,aAA8G;AAAA,MAC9G,mDAAC;AAAA,QAAM,MAAK;AAAA,QAAO,IAAG;AAAA,QAAa,OAAO,MAAM;AAAA,QAAK;AAAA,QAAoB,WAAU;AAAA,SAAnF;AAAA;AAAA;AAAA;AAAA,aAAyV;AAAA;AAAA,KAF7V;AAAA;AAAA;AAAA;AAAA,SAGA;AAEN;AAGe,SAAR,QAAyB;AAC9B,QAAM,CAAC,aAAa,cAAc,QAAI,uBAAS,EAAE;AAE/C,8BAAU,MAAM;AACZ,QAAI,CAAC,aAAa;AAChB,cAAQ,IAAI;AAAA,IAEd,OAAO;AACH,UAAI,YAAY,SAAS,GAAG;AACxB,cAAM,UAAU,YAAY,YAAY;AAAA,MAG5C;AAAA,IACJ;AAAA,EACJ,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC;AAEpB,SACI,mDAAC;AAAA,IAAI,WAAU;AAAA,IACX;AAAA,yDAAC;AAAA,QAAO,WAAU;AAAA,QACd;AAAA,6DAAC;AAAA,YAAG,WAAU;AAAA,YAAqC;AAAA,aAAnD;AAAA;AAAA;AAAA;AAAA,iBAAqE;AAAA,UACrE,mDAAC;AAAA,YAAG,WAAU;AAAA,YAAwC;AAAA,aAAtD;AAAA;AAAA;AAAA;AAAA,iBAA2E;AAAA;AAAA,SAF/E;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC;AAAA,QAAY,KAAK;AAAA,QAAa,UAAU;AAAA,SAAzC;AAAA;AAAA;AAAA;AAAA,aAAwD;AAAA,MACxD,mDAAC;AAAA,QAAI,WAAU;AAAA,SAAf;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC;AAAA,QAAI,WAAU;AAAA,QACX,6DAAC;AAAA,UAAI,WAAU;AAAA,UACX,6DAAC;AAAA,YAAI,WAAU;AAAA,aAAf;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,WAHJ;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,SALJ;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA;AAAA,KAfJ;AAAA;AAAA;AAAA;AAAA,SAgBA;AAER;",
  "names": []
}
